/* A Bison parser, made by GNU Bison 2.5.  */



/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     SPACE = 258,
     TEXT = 259,
     SYMTOK = 260,
     ALL = 261,
     SOME = 262,
     NONE = 263,
     MAYBE = 264,
     CASES = 265,
     BLOCK = 266,
     CHOOSE = 267,
     GATHER = 268,
     AND = 269,
     OR = 270,
     END = 271,
     COLLECT = 272,
     UNTIL = 273,
     COLL = 274,
     OUTPUT = 275,
     REPEAT = 276,
     PUSH = 277,
     REP = 278,
     SINGLE = 279,
     FIRST = 280,
     LAST = 281,
     EMPTY = 282,
     MOD = 283,
     MODLAST = 284,
     DEFINE = 285,
     TRY = 286,
     CATCH = 287,
     FINALLY = 288,
     IF = 289,
     ERRTOK = 290,
     HASH_BACKSLASH = 291,
     HASH_SLASH = 292,
     DOTDOT = 293,
     HASH_H = 294,
     HASH_S = 295,
     HASH_R = 296,
     HASH_J = 297,
     HASH_SEMI = 298,
     HASH_B_QUOTE = 299,
     HASH_N = 300,
     HASH_T = 301,
     WORDS = 302,
     WSPLICE = 303,
     QWORDS = 304,
     QWSPLICE = 305,
     SECRET_ESCAPE_R = 306,
     SECRET_ESCAPE_E = 307,
     SECRET_ESCAPE_I = 308,
     SECRET_ESCAPE_J = 309,
     OLD_DOTDOT = 310,
     NUMBER = 311,
     METANUM = 312,
     JSKW = 313,
     HASH_N_EQUALS = 314,
     HASH_N_HASH = 315,
     REGCHAR = 316,
     REGTOKEN = 317,
     LITCHAR = 318,
     SPLICE = 319,
     JSPLICE = 320,
     OLD_AT = 321,
     CONSDOT = 322,
     LAMBDOT = 323,
     UREFDOT = 324,
     OREFDOT = 325,
     UOREFDOT = 326,
     LOW = 327,
     ELSE = 328,
     ELIF = 329
   };
#endif
/* Tokens.  */
#define SPACE 258
#define TEXT 259
#define SYMTOK 260
#define ALL 261
#define SOME 262
#define NONE 263
#define MAYBE 264
#define CASES 265
#define BLOCK 266
#define CHOOSE 267
#define GATHER 268
#define AND 269
#define OR 270
#define END 271
#define COLLECT 272
#define UNTIL 273
#define COLL 274
#define OUTPUT 275
#define REPEAT 276
#define PUSH 277
#define REP 278
#define SINGLE 279
#define FIRST 280
#define LAST 281
#define EMPTY 282
#define MOD 283
#define MODLAST 284
#define DEFINE 285
#define TRY 286
#define CATCH 287
#define FINALLY 288
#define IF 289
#define ERRTOK 290
#define HASH_BACKSLASH 291
#define HASH_SLASH 292
#define DOTDOT 293
#define HASH_H 294
#define HASH_S 295
#define HASH_R 296
#define HASH_J 297
#define HASH_SEMI 298
#define HASH_B_QUOTE 299
#define HASH_N 300
#define HASH_T 301
#define WORDS 302
#define WSPLICE 303
#define QWORDS 304
#define QWSPLICE 305
#define SECRET_ESCAPE_R 306
#define SECRET_ESCAPE_E 307
#define SECRET_ESCAPE_I 308
#define SECRET_ESCAPE_J 309
#define OLD_DOTDOT 310
#define NUMBER 311
#define METANUM 312
#define JSKW 313
#define HASH_N_EQUALS 314
#define HASH_N_HASH 315
#define REGCHAR 316
#define REGTOKEN 317
#define LITCHAR 318
#define SPLICE 319
#define JSPLICE 320
#define OLD_AT 321
#define CONSDOT 322
#define LAMBDOT 323
#define UREFDOT 324
#define OREFDOT 325
#define UOREFDOT 326
#define LOW 327
#define ELSE 328
#define ELIF 329




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{

/* Line 2068 of yacc.c  */
#line 109 "parser.y"

  wchar_t *lexeme;
  union obj *val;
  wchar_t chr;
  cnum lineno;



/* Line 2068 of yacc.c  */
#line 207 "y.tab.h"
} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif




