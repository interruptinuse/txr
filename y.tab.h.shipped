/* A Bison parser, made by GNU Bison 2.5.  */



/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     SPACE = 258,
     TEXT = 259,
     SYMTOK = 260,
     ALL = 261,
     SOME = 262,
     NONE = 263,
     MAYBE = 264,
     CASES = 265,
     BLOCK = 266,
     CHOOSE = 267,
     GATHER = 268,
     AND = 269,
     OR = 270,
     END = 271,
     COLLECT = 272,
     UNTIL = 273,
     COLL = 274,
     OUTPUT = 275,
     REPEAT = 276,
     REP = 277,
     SINGLE = 278,
     FIRST = 279,
     LAST = 280,
     EMPTY = 281,
     MOD = 282,
     MODLAST = 283,
     DEFINE = 284,
     TRY = 285,
     CATCH = 286,
     FINALLY = 287,
     IF = 288,
     ERRTOK = 289,
     HASH_BACKSLASH = 290,
     HASH_SLASH = 291,
     DOTDOT = 292,
     HASH_H = 293,
     HASH_S = 294,
     HASH_R = 295,
     HASH_J = 296,
     HASH_SEMI = 297,
     HASH_B_QUOTE = 298,
     HASH_N = 299,
     HASH_T = 300,
     WORDS = 301,
     WSPLICE = 302,
     QWORDS = 303,
     QWSPLICE = 304,
     SECRET_ESCAPE_R = 305,
     SECRET_ESCAPE_E = 306,
     SECRET_ESCAPE_I = 307,
     OLD_DOTDOT = 308,
     NUMBER = 309,
     METANUM = 310,
     JSKW = 311,
     HASH_N_EQUALS = 312,
     HASH_N_HASH = 313,
     REGCHAR = 314,
     REGTOKEN = 315,
     LITCHAR = 316,
     SPLICE = 317,
     OLD_AT = 318,
     CONSDOT = 319,
     LAMBDOT = 320,
     UREFDOT = 321,
     OREFDOT = 322,
     UOREFDOT = 323,
     LOW = 324,
     ELSE = 325,
     ELIF = 326
   };
#endif
/* Tokens.  */
#define SPACE 258
#define TEXT 259
#define SYMTOK 260
#define ALL 261
#define SOME 262
#define NONE 263
#define MAYBE 264
#define CASES 265
#define BLOCK 266
#define CHOOSE 267
#define GATHER 268
#define AND 269
#define OR 270
#define END 271
#define COLLECT 272
#define UNTIL 273
#define COLL 274
#define OUTPUT 275
#define REPEAT 276
#define REP 277
#define SINGLE 278
#define FIRST 279
#define LAST 280
#define EMPTY 281
#define MOD 282
#define MODLAST 283
#define DEFINE 284
#define TRY 285
#define CATCH 286
#define FINALLY 287
#define IF 288
#define ERRTOK 289
#define HASH_BACKSLASH 290
#define HASH_SLASH 291
#define DOTDOT 292
#define HASH_H 293
#define HASH_S 294
#define HASH_R 295
#define HASH_J 296
#define HASH_SEMI 297
#define HASH_B_QUOTE 298
#define HASH_N 299
#define HASH_T 300
#define WORDS 301
#define WSPLICE 302
#define QWORDS 303
#define QWSPLICE 304
#define SECRET_ESCAPE_R 305
#define SECRET_ESCAPE_E 306
#define SECRET_ESCAPE_I 307
#define OLD_DOTDOT 308
#define NUMBER 309
#define METANUM 310
#define JSKW 311
#define HASH_N_EQUALS 312
#define HASH_N_HASH 313
#define REGCHAR 314
#define REGTOKEN 315
#define LITCHAR 316
#define SPLICE 317
#define OLD_AT 318
#define CONSDOT 319
#define LAMBDOT 320
#define UREFDOT 321
#define OREFDOT 322
#define UOREFDOT 323
#define LOW 324
#define ELSE 325
#define ELIF 326




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{

/* Line 2068 of yacc.c  */
#line 107 "parser.y"

  wchar_t *lexeme;
  union obj *val;
  wchar_t chr;
  cnum lineno;



/* Line 2068 of yacc.c  */
#line 201 "y.tab.h"
} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif




